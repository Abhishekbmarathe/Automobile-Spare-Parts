<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Order Page</title>
    <link rel="stylesheet" type="text/css" href="styles/style2.css">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>
<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .form-container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 500px;
    }

    h1 {
        color: #333;
        text-align: center;
    }

    label {
        display: block;
        margin-top: 10px;
        color: #333;
    }

    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        /* Ensures padding does not affect width */
    }

    .size {
        margin-top: 5px;
        display: flex;
        justify-content: space-between;
    }

    input[type="radio"] {
        margin-right: 5px;
    }

    button {
        display: block;
        width: 100%;
        padding: 10px;
        background-color: #007BFF;
        color: white;
        border: none;
        border-radius: 4px;
        margin-top: 20px;
        cursor: pointer;
    }

    button:hover {
        background-color: #0056b3;
    }

    @media (max-width: 600px) {
        .form-container {
            margin: 20px;
        }
    }

    select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #fff;
        margin-top: 5px;
    }

    fieldset {
        border: 1px solid #ccc;
        padding: 10px;
        margin-top: 20px;
    }

    legend {
        padding: 0 5px;
        color: #333;
    }

    label {
        display: block;
        margin-top: 10px;
    }

    input[type="radio"] {
        margin-right: 10px;
    }
</style>

<body>
    <div class="form-container">
        <h1>Place Your Order</h1>
        <form id="food-order-form">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>

            <label for="phone">Phone:</label>
            <input type="tel" id="phone" name="phone" required>

            <fieldset>
                <legend>Payment Method:</legend>
                <label><input type="radio" name="payment" value="credit_debit" required> Credit/Debit Card</label>
                <label><input type="radio" name="payment" value="upi"> UPI</label>
                <label><input type="radio" name="payment" value="cod"> Cash on Delivery</label>
            </fieldset>

            <label for="address">Address:</label>
            <textarea id="address" name="address" rows="4" required></textarea>

            <button type="submit" id="submitOrderBtn">Submit Order</button>
            <button type="button" id="payBtn">Pay with Razorpay</button>
        </form>
    </div>

    <script>
        document.getElementById('food-order-form').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent default form submission
            if (!confirm('Are you sure you want to submit this order?')) {
                alert('Order submission cancelled.');
                return; // Exit the function if the user cancels
            }
            submitOrderForm();
        });

        function submitOrderForm() {
            const form = document.getElementById('food-order-form');
            form.setAttribute('action', '/submit'); // Set the action to the desired URL
            form.setAttribute('method', 'post'); // Set the method to POST

            // Append additional data from localStorage if needed
            const spareItems = JSON.parse(localStorage.getItem('spareItems') || '[]');
            spareItems.forEach((item) => {
                appendHiddenInput(form, 'itemName', item.name);
                appendHiddenInput(form, 'price', item.price);
            });

            const userId = localStorage.getItem('userId');
            if (userId) {
                appendHiddenInput(form, 'userId', userId);
            }

            form.submit(); // Submit the form
            localStorage.clear(); // Clear localStorage after submission
        }

        function appendHiddenInput(form, name, value) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = name;
            input.value = value;
            form.appendChild(input);
        }

        document.getElementById('payBtn').addEventListener('click', async () => {
            const orderResponse = await fetch('/create-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ amount: 100 }) // Adjust the amount as necessary
            });

            const orderData = await orderResponse.json();

            var options = {
                "key": "rzp_test_rZ9XdkGjHcXsd6", // Replace this with your actual Razorpay key ID
                "amount": 120000,
                "currency": "INR",
                "name": "Acme Corp",
                "description": "Test Transaction",
                "image": "https://example.com/your_logo",
                "order_id": orderData.id,
                "handler": function (response) {
                    alert("Payment successful. Payment ID: " + response.razorpay_payment_id);
                    // Optionally verify the payment
                    verifyPayment(response.razorpay_order_id, response.razorpay_payment_id, response.razorpay_signature);
                },
                "prefill": {
                    "name": "Ashwinni",
                    "email": "example@example.com",
                    "contact": "6360329431"
                },
                "theme": {
                    "color": "#F37254"
                }
            };
            var paymentObject = new Razorpay(options);
            paymentObject.open();
        });

        function verifyPayment(orderId, paymentId, signature) {
            fetch('/verify-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    razorpay_order_id: orderId,
                    razorpay_payment_id: paymentId,
                    razorpay_signature: signature
                })
            }).then(response => response.json())
                .then(data => console.log(data))
                .catch(error => console.error('Payment verification failed', error));
        }
    </script>
</body>

</html>