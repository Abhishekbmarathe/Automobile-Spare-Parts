<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <style>
        body {
            background-color: #026eb1;
            color: #ffffff;
            font-family: Arial, sans-serif;
        }

        .orders-container {
            width: 80%;
            margin: auto;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #ffffff;
            color: #333333;
        }

        .order-card {
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            background-color: #f9f9f9;
            color: #333333;
        }

        .order-card h2 {
            margin: 0;
            font-size: 1.5em;
            color: #333333;
        }

        .order-card p {
            margin: 10px 0;
            color: #666666;
        }

        .order-card strong {
            color: #333333;
        }

        .return-button,
        .popup {
            display: block;
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .return-button:hover {
            background-color: #45a049;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .popup-form {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f9f9f9;
            padding: 20px;
            border: 1px solid #ccc;
            z-index: 9999;
        }

        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
    </style>
</head>

<body>
    <div class="orders-container">
        <h1>My Orders</h1>
        <% orderss.forEach(order=> { %>
            <div class="order-card">
                <h2>Order: <%= order.name %>
                </h2>
                <p><strong>Price:</strong>
                    <%= order.price %>
                </p>
                <p><strong>Item Name:</strong>
                    <%= order.itemName %>
                </p>
                <p><strong>Email:</strong>
                    <%= order.email %>
                </p>
                <p><strong>Phone:</strong>
                    <%= order.phone %>
                </p>
                <p><strong>Payment:</strong>
                    <%= order.payment %>
                </p>
                <p><strong>Address:</strong>
                    <%= order.address %>
                </p>
                <p><strong>Order Date:</strong>
                    <%= order.createdAt.toDateString() %>
                </p>
                <!-- Assuming you have an endpoint like /return-product to handle return requests -->
                <form>
                    <!-- Include any necessary hidden fields, like order ID, for processing -->
                    <input type="hidden" name="orderId" value="<%= order.id %>">
                    <!-- <button type="submit" class="return-button">Return Product</button> -->
                    <button type="button" class="popup" onclick="openForm()">Return Product</button>
                </form>
                <!-- Popup form -->
                <div class="overlay" id="overlay"></div>
                <div class="popup-form" id="popupForm">
                    <h2>Reason for Product Return</h2>
                    <form action="/return-product" method="post">
                        <label for="">Reason:</label><br>
                        <!-- <textarea id="reason" name="reason" rows="4" cols="50"></textarea><br><br> -->
                        <select name="reason" id="reason">
                            <option value="">choose reason</option>
                            <option value="Recieved wrong product">Recieved wrong product</option>
                            <option value="Recieved damaged product">Recieved damaged product</option>
                        </select>
                        <!-- <button type="submit">Submit</button> -->
                        <!-- <input type="hidden" name="orderId" value="<%= order.id %>"> -->

                        <button type="submit" class="return-button">Return Product</button>

                    </form>
                    <button onclick="closeForm()">Close</button>
                </div>
            </div>
            <% }); %>
    </div>




    <script>


        // Function to open the form popup
        function openForm() {
            document.getElementById("popupForm").style.display = "block";
            document.getElementById("overlay").style.display = "block";
        }

        // Function to close the form popup
        function closeForm() {
            document.getElementById("popupForm").style.display = "none";
            document.getElementById("overlay").style.display = "none";
        }


        document.addEventListener("DOMContentLoaded", function () {
            // Find all return buttons
            const returnButtons = document.querySelectorAll(".return-button");

            // Add click event listener to each return button
            returnButtons.forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default form submission

                    // Get the parent order-card element
                    const orderCard = event.target.closest(".order-card");

                    // Extract order details from the order card
                    const order = {
                        name: orderCard.querySelector('h2').textContent.replace('Order: ', '').trim(),
                        price: orderCard.querySelector('p:nth-of-type(1)').textContent.replace('Price:', '').trim(),
                        itemName: orderCard.querySelector('p:nth-of-type(2)').textContent.replace('Item Name:', '').trim(),
                        email: orderCard.querySelector('p:nth-of-type(3)').textContent.replace('Email:', '').trim(),
                        phone: orderCard.querySelector('p:nth-of-type(4)').textContent.replace('Phone:', '').trim(),
                        payment: orderCard.querySelector('p:nth-of-type(5)').textContent.replace('Payment:', '').trim(),
                        address: orderCard.querySelector('p:nth-of-type(6)').textContent.replace('Address:', '').trim(),
                        // orderId: orderCard.querySelector('input[name="orderId"]').value.trim(),
                        orderId:localStorage.getItem("userId"),
                        reason: orderCard.querySelector("#reason").value.trim() // Get the selected reason within the order card
                    };

                    // Make the AJAX request
                    // Send POST request to /return-product endpoint
                    fetch('/return-product', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(order),
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            // Handle the response from the server
                            setTimeout(() => {
                                alert(data);
                            }, 1000);
                            // You can add further logic here based on the server response
                        })
                        .catch(error => {
                            // Handle errors here
                            console.error('There was a problem with the fetch operation:', error);
                            if (error.message === 'Network response was not ok') {
                                alert('Network error. Please check your internet connection and try again.');
                            } else {
                                alert(error.message); // Display the error message received from the server
                            }
                        });

                    closeForm(); // Close the popup form

                });
            });
        });


    </script>


</body>

</html>